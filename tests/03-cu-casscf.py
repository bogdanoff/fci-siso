
"""
Benchmark from
J. Chem. Phys. 144, 234301 (2016); https://doi.org/10.1063/1.4953445
"""

import os
import sys

sys.path[:0] = [os.path.join(os.path.dirname(
    os.path.abspath(__file__)), "..")]

try:
    import block2
except:
    pass

from pyscf import gto, scf, mcscf
from fcisiso import FCISISO
import numpy as np

ano = gto.basis.parse("""
#BASIS SET: (21s,15p,10d,6f,4g) -> [6s,5p,3d,2f]
Cu    S
9148883.                     0.00011722            -0.00003675             0.00001383            -0.00000271             0.00000346            -0.00001401
1369956.                     0.00033155            -0.00010403             0.00003914            -0.00000766             0.00000979            -0.00003959
 311782.6                    0.00088243            -0.00027733             0.00010439            -0.00002047             0.00002626            -0.00010612
  88318.80                   0.00217229            -0.00068417             0.00025745            -0.00005030             0.00006392            -0.00025900
  28815.53                   0.00529547            -0.00167686             0.00063203            -0.00012442             0.00016087            -0.00064865
  10403.46                   0.01296630            -0.00413460             0.00155718            -0.00030269             0.00038023            -0.00154770
   4057.791                  0.03188050            -0.01035127             0.00391659            -0.00077628             0.00101716            -0.00408342
   1682.974                  0.07576569            -0.02534791             0.00959476            -0.00185240             0.00229152            -0.00940206
    733.7543                 0.16244637            -0.05836947             0.02238837            -0.00448270             0.00597497            -0.02389117
    333.2677                 0.28435959            -0.11673284             0.04528606            -0.00866024             0.01044695            -0.04359832
    156.4338                 0.34173643            -0.18466860             0.07498378            -0.01544726             0.02151583            -0.08588857
     74.69721                0.20955087            -0.14700899             0.06188170            -0.01089864             0.01030128            -0.04734865
     33.32262                0.03544751             0.18483257            -0.09047327             0.01467867            -0.00984324             0.06382592
     16.62237               -0.00243996             0.56773609            -0.39288472             0.09154122            -0.14292630             0.59363541
      8.208260               0.00146990             0.37956092            -0.35664956             0.06330857            -0.05612707             0.41506062
      3.609400              -0.00064379             0.04703755             0.34554793            -0.06093879             0.09135650            -1.70027942
      1.683449               0.00024738            -0.00072783             0.70639197            -0.27148545             0.45831402            -0.29799956
      0.733757              -0.00008118             0.00102976             0.25335911            -0.10138944            -0.19726740             1.70719425
      0.110207               0.00001615            -0.00007020             0.00658749             0.71212180            -1.30310157            -0.65600053
      0.038786              -0.00001233             0.00007090            -0.00044247             0.34613175             0.87975568            -0.31924524
      0.015514               0.00000452            -0.00002454             0.00072338             0.07198709             0.57310889             0.61772456
Cu    P
   9713.253                  0.00039987            -0.00014879             0.00005053            -0.00015878             0.00012679
   2300.889                  0.00210157            -0.00078262             0.00026719            -0.00085359             0.00068397
    746.7706                 0.01001097            -0.00376229             0.00127718            -0.00399919             0.00320291
    284.6806                 0.03836039            -0.01457968             0.00499760            -0.01608092             0.01301351
    119.9999                 0.11626756            -0.04571093             0.01561376            -0.04924864             0.04021371
     54.07386                0.25899831            -0.10593013             0.03689701            -0.12165679             0.10150109
     25.37321                0.38428226            -0.16836228             0.05796469            -0.17713367             0.13700954
     12.20962                0.29911210            -0.10373213             0.03791966            -0.14448197             0.10628972
      5.757421               0.08000672             0.21083155            -0.11706499             0.64743311            -0.83390265
      2.673402               0.00319440             0.48916443            -0.20912257             0.54797692             0.14412002
      1.186835               0.00147252             0.38468638            -0.05800532            -0.78180321             0.98301239
      0.481593              -0.00023391             0.08529338             0.16430736            -0.52607778            -0.52956418
      0.192637               0.00020761            -0.00161045             0.52885466             0.22437177            -0.75303984
      0.077055              -0.00008963             0.00206530             0.37373016             0.33392453             0.44288700
      0.030822               0.00002783            -0.00064175             0.08399866             0.14446374             0.57511589
Cu    D
    249.3497                 0.00134561            -0.00158359             0.00191116
     74.63837                0.01080983            -0.01281116             0.01772495
     28.37641                0.04733793            -0.05642679             0.07056381
     11.94893                0.13772582            -0.16641393             0.22906101
      5.317646               0.26263833            -0.35106014             0.43938511
      2.364417               0.33470401            -0.23717890            -0.26739908
      1.012386               0.31000597             0.21994641            -0.62590624
      0.406773               0.21316819             0.48841363             0.12211340
      0.147331               0.07865365             0.29537131             0.53683629
      0.058932               0.00603096             0.04295539             0.19750055
Cu    F
     15.4333                 0.03682063            -0.06200336
      6.1172                 0.24591418            -0.52876669
      2.4246                 0.50112688            -0.29078386
      0.9610                 0.35850648             0.52124157
      0.3809                 0.14728062             0.37532205
      0.1510                 0.02564748             0.10659798
""")

mol = gto.M(atom='Cu 0 0 0',
            symmetry=False,
            basis=ano, spin=1, charge=0, verbose=3)
mf = scf.newton(scf.RHF(mol).sfx2c1e())
mf.kernel()

print("\n Molecular orbital components:\n")

# total: 29 elec
# core: 1s2 2s2 2p6 3s2 3p6 (18e, 9o)
# active: 3d10 4s1/ 3d9 4s2 (11e, 11o)
ao_lb = gto.sph_labels(mol)
for i in range(30):
    ivs = np.argsort(mf.mo_coeff[:, i]**2)
    ss = ""
    for iv in ivs[::-1][:3]:
        ss += "%10.6f (%s)" % (mf.mo_coeff[iv, i] ** 2, ao_lb[iv].strip())
    print(" MO %2d :: %s" % (i, ss))

print("\n CASSCF(11, 11):\n")

cas_list = [9, 10, 11, 12, 13, 14, 22, 23, 24, 25, 26]
mc = mcscf.CASSCF(mf, 11, (6, 5))
mc.fix_spin_(ss=0.75)
mo = mcscf.sort_mo(mc, mf.mo_coeff, cas_list, base=0)
mc.state_average_((0.5, 0.1, 0.1, 0.1, 0.1, 0.1))
mc.kernel(mo)

print(mc.nelecas, mc.e_states)

dmao = mc.make_rdm1()
print(dmao.shape)

print("\n New active orbitals:\n")

for i in range(9, 20):
    ivs = np.argsort(mc.mo_coeff[:, i]**2)
    ss = ""
    for iv in ivs[::-1][:3]:
        ss += "%10.6f (%s)" % (mc.mo_coeff[iv, i] ** 2, ao_lb[iv].strip())
    print(" MO %2d :: %s" % (i, ss))

states = [(6, 2)]
ci = [
    (*mc.nelecas[::-1], 1, -1, mc.e_states[0], mc.ci[0].T),
    (*mc.nelecas[::-1], 1, -1, mc.e_states[1], mc.ci[1].T),
    (*mc.nelecas[::-1], 1, -1, mc.e_states[2], mc.ci[2].T),
    (*mc.nelecas[::-1], 1, -1, mc.e_states[3], mc.ci[3].T),
    (*mc.nelecas[::-1], 1, -1, mc.e_states[4], mc.ci[4].T),
    (*mc.nelecas[::-1], 1, -1, mc.e_states[5], mc.ci[5].T),
    (*mc.nelecas, 1, 1, mc.e_states[0], mc.ci[0]),
    (*mc.nelecas, 1, 1, mc.e_states[1], mc.ci[1]),
    (*mc.nelecas, 1, 1, mc.e_states[2], mc.ci[2]),
    (*mc.nelecas, 1, 1, mc.e_states[3], mc.ci[3]),
    (*mc.nelecas, 1, 1, mc.e_states[4], mc.ci[4]),
    (*mc.nelecas, 1, 1, mc.e_states[5], mc.ci[5])
]

siso = FCISISO(mol, mc, states)
siso.ci = ci
siso.ncore = 9
siso.norb = 11
energies = siso.kernel(dmao=dmao, amfi=True)

e0 = np.average(energies[0:2])
e1 = np.average(energies[2:8])
e2 = np.average(energies[8:12])

au2ev = 27.21139
print("")
print("E 2D(5/2)         = %10.4f eV" % ((e1 - e0) * au2ev))
print("E 2D(3/2)         = %10.4f eV" % ((e2 - e0) * au2ev))
print("2D(5/2) - 2D(3/2) = %10.4f eV" % ((e2 - e1) * au2ev))
